package spacehunn.exploitr.deautherwebgui;

import android.app.Application;
import android.content.pm.PackageManager;
import android.os.Build;
import android.os.Environment;
import android.widget.Toast;

import java.io.File;
import java.io.IOException;

public class Deauther extends Application {

    Process process;

    @Override
    public void onCreate() {

        Prefs.getInstance(getBaseContext()).setTime();
        super.onCreate();

        if (Prefs.getInstance(getBaseContext()).isLogcatState()) {
            if (checkPerms() && isExternalStorageWritable()) {

                File appDirectory = new File(Environment.getExternalStorageDirectory() + "/DeAuther");
                File logDirectory = new File(appDirectory + "/log");
                File logFile = new File(logDirectory, "logcat" + Prefs.getInstance(getBaseContext()).getTime() + ".txt");

                if (!appDirectory.exists()) {
                    if (!appDirectory.mkdir()) {
                        Toast.makeText(getBaseContext(), "Storage Permission Error", Toast.LENGTH_LONG).show();
                    }
                }

                if (!logDirectory.exists()) {
                    if (!logDirectory.mkdir()) {
                        Toast.makeText(getBaseContext(), "Storage Permission Error", Toast.LENGTH_LONG).show();
                    }
                }

                try {
                    process = Runtime.getRuntime().exec("logcat -c");
                    process.waitFor();
                    process = Runtime.getRuntime().exec("logcat -f " + logFile);
                } catch (IOException | InterruptedException e) {
                    e.printStackTrace();
                }

            }
        }
    }

    private boolean checkPerms() {
        for (String perm : MainActivity.perms) {
            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && (checkSelfPermission(perm) != PackageManager.PERMISSION_GRANTED)) {
                return false;
            }
        }
        return true;
    }

    public boolean isExternalStorageWritable() {
        String state = Environment.getExternalStorageState();
        return Environment.MEDIA_MOUNTED.equals(state);
    }
}
